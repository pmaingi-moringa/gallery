pipeline {
    agent any
    tools {nodejs "node"}
    stages {
        stage ('clone repo') { //clone repo from github
            steps{
                git url: "https://github.com/pmaingi-moringa/gallery.git", branch: "master"
            }
        }
        stage ('Build') { //install npm, mocha and chai
            steps{
                sh 'npm install'
            }
        }
        stage ('Start App') { //start application
            steps{
                echo 'Start App...'
                sh 'npm start &'
            }
        }
        stage ('Run tests') { //run npm test on cloned repo
            steps{ 
                echo 'Running Test...'
                sh 'npm test' 
            }
        }
        stage ('Deploy on Heroku') { //deploy on heroku
            steps{ 
               withCredentials([usernameColonPassword(credentialsId: '8e800112-aeb6-4e7f-8160-52f257903c8f', variable: 'HEROKU_CREDENTIALS')]) {
                   sh 'git push https://${HEROKU_CREDENTIALS}@git.heroku.com/paulmip1.git master' }

            }
        }
    } 
    post{
        success{ //send email and slack message on success
            script{
                slackSend(channel: "testing-ip1", message: "Jenkins pipeline passed without errors! Running Build #${env.BUILD_ID} on https://paulmip1-7a63b1227cbc.herokuapp.com/", color:"good")
                emailext body: "All is well!, Running Build #${env.BUILD_ID} on https://paulmip1-7a63b1227cbc.herokuapp.com/", to: "paulmwendwamaingi@gmail.com", subject: "Build Passed in Jenkins: IP1"
            }
        } 
        failure{ //send email and slasck message on failure 
            script{
                slackSend(channel: "testing-ip1", message: "Jenkins pipeline failed! Running Build #${env.BUILD_ID}", color:"danger")
                emailext body: "Check console output in Jenkins, Running Build #${env.BUILD_ID}", to: "paulmwendwamaingi@gmail.com", subject: 'Build Failed in Jenkins: IP1'
            }
        } 
    } 
}